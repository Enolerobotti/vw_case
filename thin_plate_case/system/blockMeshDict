/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.002752963;

vertices
(
    (-20 0 -0.01) //0
    (-14 0 -0.01) // 1 
    (-6 0 -0.01) //2
    (0 0 -0.01) //3
    (-20 20 -0.01) //4
    (-14 20 -0.01) //5
    (-6 20 -0.01) //6
    (0 20 -0.01) //7
    (-20 20 0.01) //8 
    (-14 20 0.01) //9
    (-6 20 0.01) //10
    (0 20 0.01) //11
    (-20 0 0.01) //12
    (-14 0 0.01) //13 
    (-6 0 0.01) //14
    (0 0 0.01) //15
);

blocks
(
    hex (0 1 5 4 12 13 9 8) (15 100 1) simpleGrading (0.25 32 1)
    hex (1 2 6 5 13 14 10 9) (50 100 1) simpleGrading (1 32 1)
    hex (2 3 7 6 14 15 11 10) (15 100 1) simpleGrading (4 32 1)
);

edges
(
);

boundary
(
    movingWall
    {
        type wall;
        faces
        (
            (1 2 14 13)
        );
    }
    farFieldMoving
    {
        type patch;
        faces
        (
            (9 10 6 5)
        );
    }
    right
    {
        type wall;
        faces
        (
            (3 15 11 7)
        );
    }
    axis
    {
        type symmetryPlane;
        faces
        (
            (0 1 13 12)
            (2 3 15 14)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 12 8 4)
        );
    }
    farField
    {
        type patch;
        faces
        (
            (8 4 5 9)
            (10 11 7 6)
        );
    }
    back
    {
        type empty;
        faces
        (
            (0 4 5 1)
            (2 6 7 3)
            (1 5 6 2)
        );
    }
    front
    {
        type empty;
        faces
        (
            (12 8 9 13)
            (14 10 11 15)
            (13 9 10 14)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
