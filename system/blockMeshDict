/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.002752963;

vertices
(
    (-20 0 -0.01) //0
    (-14 0 -0.01) // 1 
    (-6 0 -0.01) //2
    (0 0 -0.01) //3
    (-20 0.5 -0.01) //4  TODO
    (-14 0.5 -0.01) //5  TODO
    (-6 0.5 -0.01) //6 TODO
    (0 0.5 -0.01) //7 TODO
    (-20 10 -0.01) //8
    (-14 10 -0.01) //9
    (-6 10 -0.01) //10
    (0 10 -0.01) //11
    (-20 0.5 0.01) //12  TODO
    (-14 0.5 0.01) //13  TODO
    (-6 0.5 0.01) //14 TODO
    (0 0.5 0.01) //15 TODO
    (-20 10 0.01) //16 
    (-14 10 0.01) //17
    (-6 10 0.01) //18
    (0 10 0.01) //19
    (-20 0 0.01) //20
    (-14 0 0.01) // 21 
    (-6 0 0.01) //22
    (0 0 0.01) //23
);

blocks
(
    hex (0 1 5 4 20 21 13 12) (15 5 1) simpleGrading (0.5 1 1)
    hex (2 3 7 6 22 23 15 14) (15 5 1) simpleGrading (2 1 1)
    hex (4 5 9 8 12 13 17 16) (15 25 1) simpleGrading (0.5 4 1)
    hex (5 6 10 9 13 14 18 17) (50 25 1) simpleGrading (1 4 1)
    hex (6 7 11 10 14 15 19 18) (15 25 1) simpleGrading (2 4 1)
);

edges
(
);

boundary
(
    movingWall
    {
        type wall;
        faces
        (
            (1 5 13 21)
            (5 6 14 13)
            (2 22 14 6)
        );
    }
    farFieldMoving
    {
        type patch;
        faces
        (
            (9 17 18 10)
        );
    }
    fixedWall
    {
        type wall;
        faces
        (
            (3 7 15 23)
            (7 11 19 15)
        );
    }
    axis
    {
        type symmetryPlane;
        faces
        (
            (0 1 21 20)
            (2 3 23 22)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 20 12 4)
            (4 12 16 8)
        );
    }
    farField
    {
        type patch;
        faces
        (
            (8 16 17 9)
            (10 18 19 11)
        );
    }
    back
    {
        type empty;
        faces
        (
            (0 4 5 1)
            (2 6 7 3)
            (4 8 9 5)
            (5 9 10 6)
            (6 10 11 7)
        );
    }
    front
    {
        type empty;
        faces
        (
            (20 21 13 12)
            (22 23 15 14)
            (12 13 17 16)
            (13 14 18 17)
            (14 15 19 18)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
